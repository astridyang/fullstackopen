[{"H:\\yhd\\fullstackopen\\part2\\countries\\src\\reportWebVitals.js":"1","H:\\yhd\\fullstackopen\\part2\\countries\\src\\App.js":"2","H:\\yhd\\fullstackopen\\part2\\countries\\src\\index.js":"3"},{"size":362,"mtime":1608370031930,"results":"4","hashOfConfig":"5"},{"size":2834,"mtime":1609394682951,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1608370031930,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wlxts8",{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\yhd\\fullstackopen\\part2\\countries\\src\\reportWebVitals.js",[],"H:\\yhd\\fullstackopen\\part2\\countries\\src\\App.js",["15","16","17"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './App.css'\nfunction App() {\n  const [query, setQuery] = useState('')\n  const [countryList, setCountryList] = useState([])\n  const [url, setUrl] = useState('')\n  const [weatherUrl, setWeatherUrl] = useState('')\n  const [weather, setWeather] = useState({\n  })\n  const api_key = process.env.REACT_APP_API_KEY\n  const bindKeywordChange = (e) => {\n    let value = e.target.value\n    setQuery(value)\n  }\n  const Result = () => {\n    let n = 0\n    if(Array.isArray(countryList)){\n      n = countryList.length\n    }\n    if (n > 10) {\n      return (\n        <>\n          <p>too many matches, specify another filter</p>\n        </>\n      )\n    }\n    else if (n == 1) {\n      let country = countryList[0]\n      let languages = country.languages\n      return (\n        <div>\n          <h2>{country.name}</h2>\n          <p>capital {country.capital}</p>\n          <p>population {country.population}</p>\n          <h3>languages</h3>\n          <ul>\n            {\n              languages.map(language => \n              <li key={language.name}>{language.name}</li>\n              )\n            }\n          </ul>\n          <img src={country.flag} className=\"country-logo\" />\n          <h2>Weather in {country.capital}</h2>\n          <div>\n            <p>temperature: {weather.temperature}</p>\n            <img src={weather.weather_icons} className=\"country-logo\" />\n            <p>wind: {weather.wind_speed} mph direction {weather.wind_dir}</p>\n          </div>\n        </div>\n      )\n    } else if (n > 1 && n < 10) {\n      return (\n        <>\n          <ul>\n            {\n              countryList.map(country => \n                <li key={country.name}>{country.name} <button onClick={()=>{\n                  setWeatherUrl(`http://api.weatherstack.com/current?access_key=${api_key}&query=${country.capital}`)\n                  setUrl(`https://restcountries.eu/rest/v2/name/${country.name}`)\n                }}>show</button></li>\n              )\n            }\n          </ul>\n        </>\n      )\n    } else {\n      return (\n        <></>\n      )\n    }\n  }\n  useEffect(() => {\n    axios\n      .get(weatherUrl)\n      .then(response => {\n        if(response.data.current){\n          setWeather(response.data.current)\n        }\n      })\n  }, [weatherUrl])\n  useEffect(() => {\n    axios\n      .get(url)\n      .then(response => {\n        setCountryList(response.data)\n      })\n  }, [url])\n \n  const queryCountry = (e) => {\n    e.preventDefault();\n    setUrl(`https://restcountries.eu/rest/v2/name/${query}`)\n    \n  }\n  return (\n    <div>\n      <form onSubmit={queryCountry}>\n        <p>find countries <input value={query} onChange={bindKeywordChange} /></p>\n        <button type=\"submit\">search</button>\n      </form>\n      <Result />\n    </div>\n  );\n}\n\nexport default App;\n","H:\\yhd\\fullstackopen\\part2\\countries\\src\\index.js",[],{"ruleId":"18","severity":1,"message":"19","line":28,"column":16,"nodeType":"20","messageId":"21","endLine":28,"endColumn":18},{"ruleId":"22","severity":1,"message":"23","line":44,"column":11,"nodeType":"24","endLine":44,"endColumn":62},{"ruleId":"22","severity":1,"message":"23","line":48,"column":13,"nodeType":"24","endLine":48,"endColumn":73},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]